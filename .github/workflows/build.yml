name: Build

on:
  release:
    types: [created]

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Run tests
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19'
          check-latest: true
      - run: go test -v -cover
  buildrelease:
    name: Build and Release
    runs-on: 'ubuntu-latest'
    needs: test
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Do Build
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
          check-latest: true
      - name: Get OS and arch info
        run: |
          echo "CGO_ENABLED=0" >> $GITHUB_ENV
      - name: Build and Release
        uses: wangyoucao577/go-release-action@v1.34
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          binary_name: tacticalagent
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          ldflags: -s -w
          compress_assets: OFF
